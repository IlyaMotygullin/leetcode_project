package org.example.Example3;

import java.util.*;

/*
Римские цифры представлены семью различными символами: I, V, X, L C, D M,,, и ,,.
Значение       символа
I 1
V 5
X 10
L 50
C 100
D 500
M 1000
Например, 2 записывается как II римскими цифрами, просто складываются две единицы.
12 записывается как XII, что означает просто X + II. Число 27 записывается как XXVII, что является XX + V + II.
Римские цифры обычно записываются от наибольшего к наименьшему слева направо.
Однако цифра для четырех таковой не является IIII. Вместо этого число четыре записывается как IV.
Поскольку единица стоит перед пятеркой, мы вычитаем ее, получая четыре.
Тот же принцип применим к числу девять, которое записывается как IX.
Существует шесть случаев, когда используется вычитание:
I может быть помещен перед V (5) и X (10), чтобы получились 4 и 9.
X может быть помещен перед L (50) и C (100), чтобы составить 40 и 90.
C может быть помещен перед D (500) и M (1000), чтобы получить 400 и 900.
Если задана римская цифра, преобразуйте ее в целое число.

Пример 1:
Ввод: s = "III"
Вывод:3
Объяснение: III = 3.

Пример 2:
Входные данные: s = "LVIII"
Вывод:58
Пояснение: L = 50, V= 5, III = 3.

Пример 3:
Входные данные: s = "MCMXCIV"
Результат:1994
Пояснение: M = 1000, CM = 900, XC = 90 и IV = 4.
 */
public class Main {
    public static void main(String[] args) {
        romanToInt("LVIII");
    }
    public static int romanToInt(String s) {
        Map<Character, Integer> map = new HashMap<>();
        map.put('I', 1);
        map.put('V', 5);
        map.put('X', 10);
        map.put('L', 50);
        map.put('C', 100);
        map.put('D', 500);
        map.put('M', 1000);
        int last = map.get(s.charAt(s.length() - 1));
        for (int i = 0; i < s.length() - 1; i++) {
            int a = map.get(s.charAt(i));
            int b = map.get(s.charAt(i+1));
            if (a < b) {
                last -= a;
            } else {
                last += a;
            }
        }
        System.out.println(last);
        return last;
    }
}
